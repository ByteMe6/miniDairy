import { initializeApp } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js";
import {
  getDatabase,
  ref,
  push,
  set,
  get,
  update,
  remove,
} from "https://www.gstatic.com/firebasejs/10.8.0/firebase-database.js";
import {
  getAuth,
  signInWithPopup,
  GoogleAuthProvider,
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
  signOut,
  onAuthStateChanged,
} from "https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js";
import { nanoid } from "https://cdn.jsdelivr.net/npm/nanoid/nanoid.js";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const firebaseConfig = {
  apiKey: "AIzaSyBE4riodBZmu32r1Si8dvi3LZNG28JeOzA",
  authDomain: "minidairy-59182.firebaseapp.com",
  databaseURL:
    "https://minidairy-59182-default-rtdb.europe-west1.firebasedatabase.app",
  projectId: "minidairy-59182",
  storageBucket: "minidairy-59182.appspot.com",
  messagingSenderId: "454703141412",
  appId: "1:454703141412:web:0becaac22c944aeb7a7eb1",
  measurementId: "G-JG61L9XSXN",
};

const app = initializeApp(firebaseConfig);
const db = getDatabase(app);
const auth = getAuth(app);
const provider = new GoogleAuthProvider();

let editImg = `<svg class="black" v—ëiewBox="0 0 24 24"><path fill="currentColor" d="M3 17.25V21h3.75l11-11-3.75-3.75-11 11zM14.75 3l3.75 3.75 1.5-1.5-3.75-3.75-1.5 1.5z"/></svg>`;

let deleteImg = `<svg class="black" viewBox="0 0 24 24"><path fill="currentColor" d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"/></svg>`;
// üî• –ü–æ–∫–∞–∑–∞—Ç—å Toastify
function showToast(message) {
  Toastify({
    text: message,
    duration: 3000,
    gravity: "top",
    position: "center",
    backgroundColor: "#4CAF50",
    stopOnFocus: true,
  }).showToast();
}

// üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
async function register() {
  const email = document.getElementById("email").value;
  const password = document.getElementById("password").value;
  try {
    await createUserWithEmailAndPassword(auth, email, password);
    showModal("–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω!");
  } catch (error) {
    showModal(error.message);
  }
}

// üîë –í—Ö–æ–¥
async function login() {
  const email = document.getElementById("email").value;
  const password = document.getElementById("password").value;
  try {
    await signInWithEmailAndPassword(auth, email, password);
    showToast("–í—ã –≤–æ—à–ª–∏!");
  } catch (error) {
    showToast(error.message);
  }
}

// üî• Google Login
async function loginWithGoogle() {
  try {
    await signInWithPopup(auth, provider);
    showToast("–í—ã –≤–æ—à–ª–∏ —á–µ—Ä–µ–∑ Google!");
  } catch (error) {
    showToast(error.message);
  }
}

// üö™ –í—ã—Ö–æ–¥
async function logout() {
  await signOut(auth);
  showToast("–í—ã –≤—ã—à–ª–∏!");
}

// ‚úç –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç
async function addPost() {
  const user = auth.currentUser;
  if (!user) {
    showToast("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!");
    return;
  }

  const postText = document.getElementById("postText").value;
  if (!postText.trim()) {
    showToast("–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç–æ–π –ø–æ—Å—Ç!");
    return;
  }

  const postId = nanoid(); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
  const postRef = ref(db, `posts/${postId}`);
  await set(postRef, {
    text: postText,
    userId: user.uid,
    timestamp: Date.now(),
  });

  document.getElementById("postText").value = ""; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
  showToast("–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!");
  loadPosts();

  // –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞
  setTimeout(() => {
    remove(postRef)
      .then(() => {
        console.log("–ü–æ—Å—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞");
        loadPosts(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
      })
      .catch((error) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞:", error);
      });
  }, 86400000); // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
}

// üìå –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤
async function loadPosts() {
  const user = auth.currentUser;
  if (!user) return;

  const postsContainer = document.getElementById("postsContainer");
  if (!postsContainer) {
    console.error("–û—à–∏–±–∫–∞: —ç–ª–µ–º–µ–Ω—Ç #postsContainer –Ω–µ –Ω–∞–π–¥–µ–Ω!");
    return;
  }

  postsContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π

  const postsRef = ref(db, "posts");
  const snapshot = await get(postsRef);

  const postsArray = [];
  const currentTime = Date.now(); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è

  snapshot.forEach((childSnapshot) => {
    const post = childSnapshot.val();
    if (post.userId === user.uid) {
      if (currentTime - post.timestamp > 86400000) {
        // –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç, –µ—Å–ª–∏ –æ–Ω —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
        remove(ref(db, `posts/${childSnapshot.key}`));
      } else {
        postsArray.push({
          key: childSnapshot.key,
          text: post.text,
          timestamp: post.timestamp,
        });
      }
    }
  });

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
  postsArray.sort((a, b) => b.timestamp - a.timestamp);

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  postsArray.forEach((post) => {
    const postElement = document.createElement("div");
    postElement.className = "post";
    postElement.innerHTML = `
                <span>${post.text}</span>
                <div class="post-buttons">
                    <button class="edit-btn" onclick="showEditModal('${post.key}', '${post.text}')">${editImg}</button>
                    <button class="delete-btn" onclick="deletePost('${post.key}')">${deleteImg}</button>
                </div>
            `;
    postsContainer.appendChild(postElement); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
  });
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞
async function editPost(postId, oldText) {
  showEditModal(postId, oldText);
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞
async function deletePost(postId) {
  const postRef = ref(db, `posts/${postId}`);
  remove(postRef)
    .then(() => {
      console.log("–ü–æ—Å—Ç —É–¥–∞–ª–µ–Ω");
      loadPosts(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    })
    .catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞:", error);
    });
}

// üë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
onAuthStateChanged(auth, (user) => {
  const loginForm = document.getElementById("loginForm");
  const postSection = document.getElementById("postSection");
  const postsContainer = document.getElementById("postsContainer");
  const logoutButton = document.getElementById("logoutButton");

  if (user) {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É
    loginForm.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞
    postSection.style.display = "flex"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤
    postsContainer.style.display = "flex"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å—Ç–æ–≤
    logoutButton.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–π—Ç–∏"
    loadPosts(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã
  } else {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É
    loginForm.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞
    postSection.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤
    postsContainer.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å—Ç–æ–≤
    logoutButton.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–π—Ç–∏"
  }
});

// ‚úÖ –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏
window.register = register;
window.login = login;
window.loginWithGoogle = loginWithGoogle;
window.logout = logout;
window.addPost = addPost;
window.editPost = editPost;
window.deletePost = deletePost;
window.confirmAction = confirmAction;
window.showEditModal = showEditModal;
window.confirmEdit = confirmEdit;
window.closeModal = closeModal;
window.closeEditModal = closeEditModal;

function showModal(message) {
  document.getElementById("modal-message").innerText = message;
  document.getElementById("modal").classList.remove("hidden");
}

function closeModal() {
  document.getElementById("modal").classList.add("hidden");
}

let currentAction = null;

function showConfirmModal(message, action) {
  document.getElementById("confirm-message").innerText = message;
  document.getElementById("confirmModal").classList.remove("hidden");
  currentAction = action; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
}

function closeConfirmModal() {
  document.getElementById("confirmModal").classList.add("hidden");
  currentAction = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
}

function confirmAction() {
  if (currentAction) {
    currentAction(); // –í—ã–ø–æ–ª–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
  }
  closeConfirmModal(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
}

let currentEditPostId = null;

function showEditModal(postId, oldText) {
  currentEditPostId = postId; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  document.getElementById("editText").value = oldText; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
  const modal = document.getElementById("editModal");
  modal.classList.remove("hidden"); // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å hidden
  modal.style.display = "flex"; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º display flex –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
}

function closeEditModal() {
  const modal = document.getElementById("editModal");
  modal.classList.add("hidden"); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å hidden
  modal.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
}

function confirmEdit() {
  const newText = document.getElementById("editText").value;
  if (!newText) return;

  const postRef = ref(db, `posts/${currentEditPostId}`);
  update(postRef, { text: newText });

  Toastify({
    text: "–ü–æ—Å—Ç –æ–±–Ω–æ–≤–ª—ë–Ω!",
    duration: 2000,
    gravity: "top",
    position: "center",
    style: { background: "blue" },
  }).showToast();
  loadPosts();
  closeEditModal(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
}
